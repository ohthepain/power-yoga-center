--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'Config_constants'

Timestamp = i64

AssetID = string

SchemaVersionID = i32

PoseEntryID = string

PoseSequenceID = string

PoseSequence = 

PoseEntry = __TObject:new{
  poseEntryId,
  englishName,
  realName,
  seconds,
  poseFilename,
  backgroundFilename,
  matFilename,
  swooshFilename,
  shadowFilename,
  shortAudioFilename,
  detailAudioFilename
}

function PoseEntry:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.poseEntryId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 10 then
      if ftype == TType.STRING then
        self.englishName = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 11 then
      if ftype == TType.STRING then
        self.realName = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 20 then
      if ftype == TType.I32 then
        self.seconds = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 30 then
      if ftype == TType.STRING then
        self.poseFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 31 then
      if ftype == TType.STRING then
        self.backgroundFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 32 then
      if ftype == TType.STRING then
        self.matFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 33 then
      if ftype == TType.STRING then
        self.swooshFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 34 then
      if ftype == TType.STRING then
        self.shadowFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 35 then
      if ftype == TType.STRING then
        self.shortAudioFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 36 then
      if ftype == TType.STRING then
        self.detailAudioFilename = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function PoseEntry:write(oprot)
  oprot:writeStructBegin('PoseEntry')
  if self.poseEntryId ~= nil then
    oprot:writeFieldBegin('poseEntryId', TType.STRING, 1)
    oprot:writeString(self.poseEntryId)
    oprot:writeFieldEnd()
  end
  if self.englishName ~= nil then
    oprot:writeFieldBegin('englishName', TType.STRING, 10)
    oprot:writeString(self.englishName)
    oprot:writeFieldEnd()
  end
  if self.realName ~= nil then
    oprot:writeFieldBegin('realName', TType.STRING, 11)
    oprot:writeString(self.realName)
    oprot:writeFieldEnd()
  end
  if self.seconds ~= nil then
    oprot:writeFieldBegin('seconds', TType.I32, 20)
    oprot:writeI32(self.seconds)
    oprot:writeFieldEnd()
  end
  if self.poseFilename ~= nil then
    oprot:writeFieldBegin('poseFilename', TType.STRING, 30)
    oprot:writeString(self.poseFilename)
    oprot:writeFieldEnd()
  end
  if self.backgroundFilename ~= nil then
    oprot:writeFieldBegin('backgroundFilename', TType.STRING, 31)
    oprot:writeString(self.backgroundFilename)
    oprot:writeFieldEnd()
  end
  if self.matFilename ~= nil then
    oprot:writeFieldBegin('matFilename', TType.STRING, 32)
    oprot:writeString(self.matFilename)
    oprot:writeFieldEnd()
  end
  if self.swooshFilename ~= nil then
    oprot:writeFieldBegin('swooshFilename', TType.STRING, 33)
    oprot:writeString(self.swooshFilename)
    oprot:writeFieldEnd()
  end
  if self.shadowFilename ~= nil then
    oprot:writeFieldBegin('shadowFilename', TType.STRING, 34)
    oprot:writeString(self.shadowFilename)
    oprot:writeFieldEnd()
  end
  if self.shortAudioFilename ~= nil then
    oprot:writeFieldBegin('shortAudioFilename', TType.STRING, 35)
    oprot:writeString(self.shortAudioFilename)
    oprot:writeFieldEnd()
  end
  if self.detailAudioFilename ~= nil then
    oprot:writeFieldBegin('detailAudioFilename', TType.STRING, 36)
    oprot:writeString(self.detailAudioFilename)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

Data = __TObject:new{
  schemaVersionId,
  poseEntries,
  poseSequences
}

function Data:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.schemaVersionId = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 10 then
      if ftype == TType.MAP then
        self.poseEntries = {}
        local _ktype1, _vtype2, _size0 = iprot:readMapBegin() 
        for _i=1,_size0 do
          local _key4 = iprot:readString()
          local _val5 = PoseEntry:new{}
          _val5:read(iprot)
          self.poseEntries[_key4] = _val5
        end
        iprot:readMapEnd()
      else
        iprot:skip(ftype)
      end
    elseif fid == 20 then
      if ftype == TType.MAP then
        self.poseSequences = {}
        local _ktype7, _vtype8, _size6 = iprot:readMapBegin() 
        for _i=1,_size6 do
          local _key10 = iprot:readString()
          local _val11 = {}
          local _etype15, _size12 = iprot:readListBegin()
          for _i=1,_size12 do
            local _elem16 = iprot:readString()
            table.insert(_val11, _elem16)
          end
          iprot:readListEnd()
          self.poseSequences[_key10] = _val11
        end
        iprot:readMapEnd()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function Data:write(oprot)
  oprot:writeStructBegin('Data')
  if self.schemaVersionId ~= nil then
    oprot:writeFieldBegin('schemaVersionId', TType.I32, 1)
    oprot:writeI32(self.schemaVersionId)
    oprot:writeFieldEnd()
  end
  if self.poseEntries ~= nil then
    oprot:writeFieldBegin('poseEntries', TType.MAP, 10)
    oprot:writeMapBegin(TType.STRING, TType.STRUCT, ttable_size(self.poseEntries))
    for kiter17,viter18 in pairs(self.poseEntries) do
      oprot:writeString(kiter17)
      viter18:write(oprot)
    end
    oprot:writeMapEnd()
    oprot:writeFieldEnd()
  end
  if self.poseSequences ~= nil then
    oprot:writeFieldBegin('poseSequences', TType.MAP, 20)
    oprot:writeMapBegin(TType.STRING, TType.LIST, ttable_size(self.poseSequences))
    for kiter19,viter20 in pairs(self.poseSequences) do
      oprot:writeString(kiter19)
      oprot:writeListBegin(TType.STRING, #viter20)
      for _,iter21 in ipairs(viter20) do
        oprot:writeString(iter21)
      end
      oprot:writeListEnd()
    end
    oprot:writeMapEnd()
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end